plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'com.google.code.gson:gson:2.10.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.flywaydb:flyway-mysql'


}

sonar {
	properties {
		property "sonar.projectKey", "xiaoqiang-ma_cicd-demo"
		property "sonar.organization", "xiaoqiang-ma"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.java.binaries", "build/classes/java/main"
		property "sonar.java.test.binaries", "build/classes/java/test"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.required = true
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
